# Complex Ansible INI Inventory
# Tests pattern expansion, group inheritance, and variable precedence

[webservers]
web[01:03] ansible_host=192.168.1.1[0:2] ansible_user=deploy ansible_port=22
web-lb ansible_host=192.168.1.20 ansible_user=admin

[databases]
db-[a:c] ansible_host=192.168.2.1[0:2] ansible_user=postgres ansible_port=5432
db-master ansible_host=192.168.2.10 ansible_user=postgres is_master=true

[cache]
redis[1,3,5] ansible_host=192.168.3.1[0:2] ansible_user=redis
memcached[01:02] ansible_host=192.168.3.20:2[1:2] ansible_user=memcached

[monitoring]
prometheus ansible_host=192.168.4.10 ansible_user=monitoring
grafana ansible_host=192.168.4.11 ansible_user=monitoring
alertmanager ansible_host=192.168.4.12 ansible_user=monitoring

# Group variables
[webservers:vars]
http_port=80
https_port=443
max_clients=200
ssl_enabled=true
backup_schedule="0 2 * * *"

[databases:vars]
db_port=5432
max_connections=100
shared_buffers="256MB"
backup_enabled=true

[cache:vars]
memory_limit="512MB"
eviction_policy="allkeys-lru"

[monitoring:vars]
retention_days=30
scrape_interval="15s"

# Group children
[backend:children]
databases
cache

[frontend:children]
webservers

[infrastructure:children]
backend
frontend
monitoring

[production:children]
infrastructure

# Production variables (highest level)
[production:vars]
env=production
debug=false
log_level=INFO
backup_retention=7
monitoring_enabled=true

[infrastructure:vars]
datacenter=us-east-1
region=virginia
deployment_type=production

[backend:vars]
network_segment=backend
firewall_zone=internal

[frontend:vars]
network_segment=frontend
firewall_zone=dmz
cdn_enabled=true